package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.display.StageScaleMode;	import flash.display.StageAlign;	import com.greensock.TweenLite;	import com.greensock.easing.*;		public class Journey extends MovieClip	{		private var _menuMode:Boolean;		private var _currentTarget:MovieClip;		private var _nextTarget:MovieClip;		private var _currentRotation:int = 0;		private var _maxOffset:Number = 50;		private var _centerX:Number;		private var _paramotor:Paramotor = new Paramotor;				public function Journey() 		{			this.addEventListener(Event.ADDED_TO_STAGE, init);		}				private function init(e:Event):void		{			this.removeEventListener(Event.ADDED_TO_STAGE, init);						stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			stage.addEventListener(Event.RESIZE, reposition);									ballMenu.addEventListener("selectAJourney", selectAJourney);			ballMenu.addEventListener("callBallBack", callBallBack);						initScene();						hideAll();			_currentTarget = beach_bkgd;			beach_bkgd.alpha = 1;			beach_bkgd.visible = true;						ballMenu.x = stage.stageWidth * .5;			ballMenu.y = stage.stageHeight * .5;						_menuMode = true;						_centerX = stage.stageWidth * .5;						_paramotor.mouseEnabled = false;			mcLight.mouseEnabled = false;						setScenePosition(beach_bkgd);			setScenePosition(mountain_bkgd);			setScenePosition(desert_bkgd);			setScenePosition(countrySide_bkgd);		}				private function reposition(e:Event):void		{			if(_menuMode)			{				ballMenu.x = stage.stageWidth * .5;				ballMenu.y = stage.stageHeight * .5;			}			else			{				ballMenu.x = stage.stageWidth - 100;				ballMenu.y = 100;			}						setScenePosition(beach_bkgd);			setScenePosition(mountain_bkgd);			setScenePosition(desert_bkgd);			setScenePosition(countrySide_bkgd);		}				private function selectAJourney(e:Event):void		{			_menuMode = false;						_currentRotation = 90 * (ballMenu.selectedScene - 1);						TweenLite.to(ballMenu, 1.5, {x:stage.stageWidth - 100, y:100, rotation:_currentRotation, scaleX:.5, scaleY:.5, ease:Quint.easeOut});						showSelectedScene(ballMenu.selectedScene);								}				private function callBallBack(e:Event):void		{			stage.removeEventListener(Event.ENTER_FRAME, enterFrameEvents);			_currentTarget.x = stage.stageWidth * .5;			_menuMode = true;			_currentTarget.closeAllPopup();			TweenLite.to(ballMenu, 1.5, {x:stage.stageWidth * .5, y:stage.stageHeight * .5, scaleX:1, scaleY:1, rotation:_currentRotation, ease:Quint.easeOut});			TweenLite.to(_currentTarget,1,{scaleX:.8, scaleY:.8});		}				private function showSelectedScene(scene:int):void		{			var target:MovieClip;						switch(scene)			{				case 1:					_nextTarget = beach_bkgd;					break;									case 2:					_nextTarget = desert_bkgd;					break;									case 3:					_nextTarget = countrySide_bkgd;					break;									case 4:					_nextTarget = mountain_bkgd;					break;									default:					_nextTarget = null;					break;								}									if(_nextTarget)			{				//hideAll();				_nextTarget.visible = true;								if(_nextTarget != _currentTarget)				TweenLite.to(_currentTarget,1,{alpha:0, scaleX:.8, scaleY:.8});				TweenLite.to(_nextTarget,1,{alpha:1, scaleX:1, scaleY:1, onComplete:transitionDoen});							}		}				private function transitionDoen():void		{			_currentTarget = _nextTarget;			_nextTarget = null;			stage.addEventListener(Event.ENTER_FRAME, enterFrameEvents);			addChild(_paramotor);		}				private function hideAll():void		{			beach_bkgd.visible = false;			mountain_bkgd.visible = false;			desert_bkgd.visible = false;			countrySide_bkgd.visible = false;		}				private function initScene():void		{			beach_bkgd.scaleX = beach_bkgd.scaleY = .8;			mountain_bkgd.scaleX = mountain_bkgd.scaleY = .8;			desert_bkgd.scaleX = desert_bkgd.scaleY = .8;			countrySide_bkgd.scaleX = countrySide_bkgd.scaleY = .8;						beach_bkgd.alpha = 0;			mountain_bkgd.alpha = 0;			desert_bkgd.alpha = 0;			countrySide_bkgd.alpha = 0;					}				private function setScenePosition(scene:MovieClip):void		{			scene.x = stage.stageWidth * .5;			scene.y = stage.stageHeight;		}				private function enterFrameEvents(e:Event):void		{			_currentTarget.x = stage.stageWidth * .5;						if(mouseX > _centerX)			{				//if(_currentTarget.x > -_maxOffset)				_currentTarget.x = -(mouseX - _centerX) / 30 + stage.stageWidth *.5;			}			else			{				//if(_currentTarget.x > _maxOffset)				_currentTarget.x = -(mouseX - _centerX) / 30 + stage.stageWidth *.5;			}												_paramotor.x += -(_paramotor.x - mouseX) * .01;			_paramotor.y += -(_paramotor.y - mouseY) * .01;						if(_paramotor.x > mouseX)			{				_paramotor.scaleX = 1;			}			else			{				_paramotor.scaleX = -1;			}		}			}	}